#!/usr/bin/env node

const program = require('commander');
const pjson = require('../package.json');
const config = require('../lib/config');
const fsAccess = require('fs-access');
const pd = require('../lib/pagerduty');

function runCheck(configFile) {
  fsAccess(configFile, (err) => {
    if (err) throw err;
    config.setupConfig(configFile, (configErr) => {
      if (configErr) {
        console.error(configErr);
        process.exit(1);
      }
      pd.checkSchedulesIds((checkError, res) => {
        if (checkError) {
          console.error('Check failed with error:', checkError);
          process.exit(1);
        }
        if (!res) {
          console.error('Check failed - empty response');
          process.exit(1);
        } else {
          console.log('Config schedule IDs passed.');
          pd.processSchedulesFromConfig((error, msg) => {
            if (error) {
              console.error('Error while processing schedules from config', error);
              process.exit(1);
            }
            console.log(msg);
            process.exit(0);
          });
        }
      });
    });
  });
}

program
  .command('check')
  .description('Check PagerDuty Overlaps')
  .action(runCheck);

program
  .version(pjson.version)
  .usage('check --config <path/to/config.json>')
  .option('-c, --config', 'Path to config.json')
  .parse(process.argv);

// default help
if (!program.args.length) program.help();
